<?xml version="1.0"?>
<ruleset name="Musicjumble">
	<description>Musicjumble coding standard.</description>
	<rule ref="Generic.Classes.DuplicateClassName"/>
	<rule ref="Generic.CodeAnalysis.EmptyStatement"/>
	<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
	<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
	<rule ref="Generic.ControlStructures.InlineControlStructure"/>
	<rule ref="Generic.Debug.ClosureLinter"/>
	<rule ref="Generic.Files.LineEndings"/>
	<rule ref="Generic.Files.LineLength">
		<properties>
			<property name="lineLimit" value="80"/>
			<property name="absoluteLineLimit" value="120"/>
		</properties>
	</rule>
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.SpaceAfterCast"/>
	<rule ref="Generic.Functions.CalltimePassByReference"/>
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	<rule ref="Generic.Metrics.CyclomaticComplexity">
		<properties>
			<property name="complexity" value="5"/>
			<property name="absoluteComplexity" value="10"/>
		</properties>
	</rule>
	<rule ref="Generic.Metrics.NestingLevel"/>
	<rule ref="Generic.NamingConventions.ConstructorName"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Generic.PHP.Deprecatedfunctions"/>
	<rule ref="Generic.PHP.DisallowShortOpenTag"/>
	<rule ref="Generic.PHP.ForbiddenFunctions"/>
	<rule ref="Generic.PHP.NoSilencedErrors"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.Strings.UnnecessaryStringConcat"/>
<!--	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="1"/>
			<property name="exact" value="true"/>
		</properties>
	</rule>-->
	<rule ref="MySource.Debug.DebugCode"/>
	<rule ref="MySource.Debug.FirebugConsole"/>
	<rule ref="MySource.PHP.EvalObjectFactory"/>
	<rule ref="PEAR.Classes.ClassDeclaration"/>
	<rule ref="PEAR.Files.IncludingFile"/>
<!--	Este de abajo no se si funcionarÃ¡ bien-->
	<rule ref="PEAR.Formatting.MultiLineAssignment"/>
	<rule ref="PEAR.NamingConventions.ValidFunctionName"/>
	
	<rule ref="Squiz.Commenting.BlockComment"/>
	<rule ref="Squiz.Commenting.ClassComment"/>
	<rule ref="Squiz.Commenting.DocCommentAlignment"/>
	<rule ref="Squiz.Commenting.EmptyCatchComment"/>
	<rule ref="Musicjumble.Commenting.Filecomment"/>
	<rule ref="Squiz.Commenting.FunctionComment"/>
	<rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
	<rule ref="Musicjumble.Commenting.InlineComment"/>
	<rule ref="Squiz.Commenting.PostStatementComment"/>
	<rule ref="Squiz.Commenting.VariableComment"/>

	<rule ref="Zend.Debug.CodeAnalyzer"/>
	<rule ref="Zend.Files.ClosingTag"/>
	<rule ref="Squiz.Classes.LowercaseclassKeywords"/>
	<rule ref="Squiz.Classes.SelfMemberReference"/>
	<rule ref="Squiz.Classes.ValidClassName"/>
	<rule ref="Squiz.Classes.ValidClassName"/>
	
<!--	CSS Provisional, no es lo que queremos -->
	<rule ref="Squiz.CSS.ClassDefinitionNameSpacing"/>
	<rule ref="Musicjumble.CSS.ClassDefinitionOpeningBraceSpace"/>
	<rule ref="Musicjumble.CSS.ColonSpacing"/>
	<rule ref="Musicjumble.CSS.ColourDefinition"/>
	<rule ref="Squiz.CSS.DuplicateClassDefinition"/>
	<rule ref="Squiz.CSS.DuplicateStyleDefinition"/>
	<rule ref="Squiz.CSS.EmptyClassDefinition"/>
	<rule ref="Squiz.CSS.EmptyStyleDefinition"/>
	<rule ref="Squiz.CSS.MissingColon"/>
	<rule ref="Squiz.CSS.Opacity"/>
	<rule ref="Squiz.CSS.SemicolonSpacing"/>
</ruleset>